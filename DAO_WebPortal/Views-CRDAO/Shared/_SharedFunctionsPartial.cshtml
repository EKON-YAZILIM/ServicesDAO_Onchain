@using DAO_WebPortal.Resources
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor

<script src="~/Casper/tsresult.js"></script>
<script src="~/Casper/CasperClientHelper.js"></script>
<script src="~/Casper/CasperJsSdk.js"></script>
<script src="~/Casper/daocontracts.js"></script>
@* <script src="~/Casper/CasperClientHelper.js"></script>
    <script src="~/Casper/CasperERC20.js"></script>
    <script src="~/Casper/CasperCEP47.js"></script> *@

<script>

    $(document).ready(function () {
        //Enter keypress submit event for forms
        $(document).on('keypress', function (e) {
            if (e.which == 13) {
                if ($("#modal-register").hasClass("show")) {
                    Register();
                }
                else if ($("#modal-forgotpass").hasClass("show")) {
                    ResetPassword();
                }
                else if ($("#modal-login").hasClass("show")) {
                    Login();
                }
                else if ($("#modal-resetpass").hasClass("show")) {
                    ResetPasswordComplete();
                }
            }
        });

        //Create Captcha after failed request attempts for all public inputs
        @if (httpContextAccessor.HttpContext.Session.GetInt32("FailCount") > 3)
        {
            @Html.Raw("resetCaptchaImage(\"#img-captcha-login\", \"securityCodeLogin\");")
            @Html.Raw("resetCaptchaImage(\"#img-captcha-register\", \"securityCodeRegister\");")
            @Html.Raw("resetCaptchaImage(\"#img-img-captcha-resetpass\", \"securityCodeResetPass\");")
            @Html.Raw("resetCaptchaImage(\"#img-captcha-resetpasscomplete\", \"securityCodeResetPassComplete\");")
            @Html.Raw("$(\".captchaDiv\").removeClass(\"d-none\");")
            @Html.Raw("failCount=" + httpContextAccessor.HttpContext.Session.GetInt32("FailCount"))
            ;
        }

            //Toastr library options
            toastr.options = {
            "closeButton": true,
                "debug": false,
                    "newestOnTop": true,
                        "progressBar": false,
                            "positionClass": "toast-bottom-right",
                                "preventDuplicates": false,
                                    "onclick": null,
                                        "showDuration": "300",
                                            "hideDuration": "1000",
                                                "timeOut": "5000",
                                                    "extendedTimeOut": "1000",
                                                        "showEasing": "swing",
                                                            "hideEasing": "linear",
                                                                "showMethod": "fadeIn",
                                                                    "hideMethod": "fadeOut"
        };

    });


    //Creates new captcha image
    function resetCaptchaImage(captchaID, code) {
        var d = new Date();
        $(captchaID).attr("src", "/get-captcha-image?" + d.getTime() + "&code=" + code);
    }

    //Login function
    function Login() {
        //Show loader and disable submit button
        ShowLoader();

        //Create login model
        var code = $('#securityCodeLogin').val();
        var email = $('#email').val()
        var password = $('#pass').val();
        var token = $('input[name="__RequestVerificationToken"]', token).val();

        //Save username/email in local storage if "Remember Me" is checked.
        if ($('#chcremember').is(':checked')) {
            localStorage.setItem("username", email);
        }
        else {
            localStorage.setItem("username", "");
        }

        //Ajax post action
        $.ajax({
            type: "POST",
            url: "../Public/Login",
            data: { "email": email, "password": password, "usercode": code, "__RequestVerificationToken": token },
            async: true,
            success: function (result) {
                if (result.success) {
                    if ('@TempData["ReloadPage"]' != '') {
                        location.reload();
                    }
                    else {
                        window.location.href = "../Home";
                    }
                }
                else {
                    failCount++;
                    toastr.warning(result.message);
                    //Show captcha image after failed request attempts
                    if (failCount > 3) {
                        resetCaptchaImage("#img-captcha-login", "securityCodeLogin");
                        $(".captchaDiv").removeClass("d-none");
                    }
                    HideLoader();
                }
            },
            failure: function (response) {
                toastr.warning("Server connection error");
                HideLoader();
            },
            error: function (response) {
                toastr.error("Unexpected error");
                HideLoader();
            }
        });
    }

    //Chain login function
    var checkInterval;
    async function ConnectWallet() {

        window.casperlabsHelper.requestConnection();

        clearInterval(checkInterval);
        checkInterval = setInterval(function () {
            CheckPublicKey();
        }, 1000);

    }

    async function CheckPublicKey() {

        try {
            const isConnected = await window.casperlabsHelper.isConnected();
            if (isConnected) {

                var publicAddress = await window.casperlabsHelper.getActivePublicKey();
                clearInterval(checkInterval);
                ShowLoader();

                var token = $('input[name="__RequestVerificationToken"]', token).val();

                //Ajax post action
                $.ajax({
                    type: "POST",
                    url: "../Chain/ConnectWallet",
                    data: { "publicAddress": publicAddress, "__RequestVerificationToken": token },
                    async: true,
                    success: function (result) {
                        if (result.success) {
                            window.location.href = "../Home";
                        }
                        else {
                            failCount++;
                            toastr.warning(result.message);
                            //Show captcha image after failed request attempts
                            if (failCount > 3) {
                                resetCaptchaImage("#img-captcha-login", "securityCodeLogin");
                                $(".captchaDiv").removeClass("d-none");
                            }
                            HideLoader();
                        }
                    },
                    failure: function (response) {
                        toastr.warning("Server connection error");
                        HideLoader();
                    },
                    error: function (response) {
                        toastr.error("Unexpected error");
                        HideLoader();
                    }
                });
            }
        }
        catch
        {
            return "";
        }

    }

    //Register function
    function Register() {
        //Check if terms is checked
        if (!$("#chcTerms").is(":checked")) {
            toastr.warning("@Lang.Login_CheckTermsError");
            return;
        }

        //Show loader and disable submit button
        ShowLoader();

        //Create register model
        var email = $('#emailregister').val()
        var namesurname = $('#nameregister').val();
        var username = $('#usernameregister').val();
        var pass = $('#passregister').val();
        var pass2 = $('#passregister2').val();
        var code2 = $('#securityCodeRegister').val();
        var token = $('input[name="__RequestVerificationToken"]', token).val();

        //Ajax post action
        $.ajax({
            type: "POST",
            url: "../Public/Register",
            async: true,
            data: { "email": email, "namesurname": namesurname, "username": username, "password": pass, "repass": pass2, "usercode": code2, "__RequestVerificationToken": token },
            success: function (result) {
                if (result.success) {
                    toastr.success(result.message);
                    $("#modal-signUp").modal("toggle");
                    $("#modal-login").modal("toggle");
                }
                else {
                    failCount++;
                    toastr.error(result.message);
                    //Show captcha image after failed request attempts
                    if (failCount > 3) {
                        resetCaptchaImage("#img-captcha-register", "securityCodeRegister");
                        $(".captchaDiv").removeClass("d-none");
                    }
                }
            },
            failure: function (response) {
                toastr.warning("Server connection error");
                HideLoader();
            },
            error: function (response) {
                toastr.error("Unexpected error");
                HideLoader();
            }
        }).done(function () {
            HideLoader();
        });
    }

    //Reset password function
    function ResetPassword() {
        //Show loader and disable submit button
        ShowLoader();

        //Create reset password model
        var email = $('#emailforgot').val()
        var token = $('input[name="__RequestVerificationToken"]', token).val();
        var code = $('#securityCodeResetPass').val();

        //Ajax post action
        $.ajax({
            type: "POST",
            url: "../Public/ResetPassword",
            async: true,
            data: { "email": email, "usercode": code, "__RequestVerificationToken": token },
            success: function (result) {
                if (result.success) {
                    toastr.success(result.message);
                }
                else {
                    failCount++;
                    toastr.error(result.message);
                }

                //Show captcha image after failed request attempts
                if (failCount > 3) {
                    resetCaptchaImage("#img-captcha-resetpass", "securityCodeResetPass");
                    $(".captchaDiv").removeClass("d-none");
                }
            },
            failure: function (response) {
                HideLoader();
            },
            error: function (response) {
                HideLoader();
            }
        }).done(function () {
            HideLoader();
        });

    }

    //Reset password complete function
    function ResetPasswordComplete() {
        //Show loader and disable submit button
        ShowLoader();

        //Create new password model
        var pass1 = $('#passreset').val()
        var pass2 = $('#passreset2').val()
        var token = $('input[name="__RequestVerificationToken"]', token).val();
        var code = $('#securityCodeResetPassComplete').val();

        //Ajax post action
        $.ajax({
            type: "POST",
            url: "../Public/ResetPasswordComplete",
            async: true,
            data: { "newpass": pass1, "newpassagain": pass2, "usercode": code, "__RequestVerificationToken": token },
            success: function (result) {
                if (result.success) {
                    toastr.success(result.message);
                    $("#modal-resetpass").modal("toggle");
                    setTimeout(function () {
                        $("#modal-login").modal("toggle");
                    }, 500);
                }
                else {
                    failCount++;
                    toastr.error(result.message);
                }

                if (failCount > 3) {
                    resetCaptchaImage("#img-captcha-resetpasscomplete", "securityCodeResetPassComplete");
                    $(".captchaDiv").removeClass("d-none");
                }
            },
            failure: function (response) {
                toastr.warning("Server connection error");
                HideLoader();
            },
            error: function (response) {
                toastr.error("Unexpected error");
                HideLoader();
            }
        }).done(function () {
            HideLoader();
        });
    }

    //Shows spinner and disables submit buttons
    function ShowLoader(explanation = "") {
        $("#loaderExplanation").addClass("d-none");
        if(explanation.length > 0)
        {
            $("#loaderExplanation").html(explanation);
            $("#loaderExplanation").removeClass("d-none");
        }

        //Disable submit button
        $('.submitFormButton').prop('disabled', true);
        //Display loading
        $(".spinner").removeClass("load-done");
        $('.spinner').fadeIn(300);
        $('.preloader').fadeIn(300);
    }

    //Hides spinner and enables submit buttons
    function HideLoader() {
        //Hide loading
        $('.spinner').fadeOut(300);
        $('.preloader').delay(300).fadeOut(300);
        //Enable submit button
        $('.submitFormButton').removeAttr("disabled");
    }

</script>